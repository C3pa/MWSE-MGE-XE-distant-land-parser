{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>This Lua library provides facilities to read MGE XE distant land files and convert them into NI structures.</p>"},{"location":"#requirements","title":"Requirements","text":"<p>Requires an up-to-date version of MWSE, available at https://mwse.github.io/MWSE/.</p>"},{"location":"#installation","title":"Installation","text":"<p>Extract the contents of the archive into your <code>Data Files</code> directory.</p>"},{"location":"apis/distantLand/","title":"distantLand","text":"<p>To use the library it needs to be <code>require</code>d first.</p> <pre><code>local distantLand = require(\"distant land parser\")\n</code></pre>"},{"location":"apis/distantLand/#functions","title":"Functions","text":""},{"location":"apis/distantLand/#distantlandparseland","title":"<code>distantLand.parseLand</code>","text":"<p>Parses <code>distantland\\world</code> file into <code>niTriShape</code>s and attaches them to a parent <code>niNode</code>. The parent <code>niNode</code> is returned.</p> <p>This function executes almost instantly, so performance shouldn't be a concern here.</p> <pre><code>local distantLand = require(\"distant land parser\")\nlocal land = distantLand.parseLand()\n</code></pre> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"apis/distantLand/#distantlandparsestatics","title":"<code>distantLand.parseStatics</code>","text":"<p>Parses <code>distantland\\statics\\static_meshes</code> and <code>distantland\\statics\\usage.data</code> files. Returns a root <code>niNode</code> with a root node for each static type. In essence, this root node contains all of the static objects used in distant land. The root node also contains root node called <code>\"InteriorWorldspaces\"</code> for interior cells distant statics. The child nodes of the interior root have the name that corresponds to Morrowind cell the statics are used for.</p> <p>On Intel\u00ae Core\u2122 i3-1115G4, with Morrowind.esm, Tribunal.esm and Bloodmoon.esm, this function takes around 25 seconds to execute.</p> <pre><code>local distantLand = require(\"distant land parser\")\nlocal statics = distantLand.parseStatics(...)\n</code></pre> <p>Parameters:</p> <ul> <li><code>saveBinary</code> (boolean): If true, the root nodes will be exported to the Morrowind install directory as the following files:<ul> <li><code>\"STATIC_AUTO_ROOT.nif\"</code></li> <li><code>\"STATIC_NEAR_ROOT.nif\"</code></li> <li><code>\"STATIC_FAR_ROOT.nif\"</code></li> <li><code>\"STATIC_VERY_FAR_ROOT.nif\"</code></li> <li><code>\"STATIC_GRASS_ROOT.nif\"</code></li> <li><code>\"STATIC_TREE_ROOT.nif\"</code></li> <li><code>\"STATIC_BUILDING_ROOT.nif\"</code></li> <li><code>\"InteriorWorldspaces.nif\"</code></li> </ul> </li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niNode)</li> </ul>"},{"location":"apis/distantLand/#distantlandparsestaticmeshes","title":"<code>distantLand.parseStaticMeshes</code>","text":"<p>Parses <code>distantland\\statics\\static_meshes</code>file. Returns an array of <code>niNode</code>s for each distant static object.</p> <p>On Intel\u00ae Core\u2122 i3-1115G4, with Morrowind.esm, Tribunal.esm and Bloodmoon.esm, this function takes around 3 seconds to execute.</p> <pre><code>local distantLand = require(\"distant land parser\")\nlocal statics = distantLand.parseStaticMeshes(...)\n</code></pre> <p>Parameters:</p> <ul> <li><code>saveBinary</code> (boolean): If true, exports all the statics meshes placed at the origin (0, 0, 0) as <code>\"static_meshes.nif\"</code> to the Morrowind install directory.</li> </ul> <p>Returns:</p> <ul> <li><code>result</code> (niNode[])</li> </ul>"}]}